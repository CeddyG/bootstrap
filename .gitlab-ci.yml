# image: node:4.2.2

composer:
    image: composer:latest
    stage: build
    script:
        - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
        - cp .env.example .env
        - php artisan key:generate
        
    artifacts:
        # Define what to output from the job.
        paths:
            - vendor/
            - .env
        
    cache:
        # The variable CI_COMMIT_REF_SLUG 
        # refers to the slug of the branch.
        # For example: `master` for the master branch.
        # We use the `composer` suffix to avoid conflicts with
        # the `npm` cache that we'll define next.
        key: ${CI_COMMIT_REF_SLUG}-composer

        # Define what to cache.
        paths:
            - vendor/
          
npm:
    image: node:latest
    # Same stage as `composer` so that they run in parallel.
    stage: build

    # Cache the `node_modules` folder
    # using the `npm` suffix on the key.
    cache:
        key: ${CI_COMMIT_REF_SLUG}-npm
        paths:
            - node_modules/

    # Install and compile.
    script:
        - npm install
        - npm run production

    # Provide the other jobs of the pipeline with
    # the node dependencies and the compiled assets.
    artifacts:
        paths:
            - node_modules/
            - public/css/
            - public/js/